/* 
* @license MIT
* ~~~~~~~~~~~~
* ab-nextjs-theme 
* ~~~~~~~~~~~~ 
* Copyright (c) 2024 Abraham Ukachi. The abElements Project.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the 'Software'), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions: 
*  
* The above copyright notice and this permission notice shall be included in all 
* copies or substantial portions of the Software. 
*
* THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* @project: ab-nextjs-theme
* @name: Styles - Theme
* @file: styles.css
* @type: CSS Stylesheet
* @authors: Abraham Ukachi <abraham.ukachi@laplateforme.io>
*
* Example usage:
*   1+|> // Import the styles in a CSS file (e.g. `globals.css`)
*    -|> @import 'ab-nextjs-theme/css/styles.css';
*    -|> 
*
*/



/*
* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
* MOTTO: We'll always do more ðŸ˜œ!!!
* !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
*/



/* TODO 1: Reduce the css rules below by moving / using them in their corresponding React components */



/* ==== AB THEME STYLES ==== */





/**** custom properties for `light` and `dark` themes ****/

/* Default Theme */
[data-theme] {}


/* Light Theme */
[data-theme="light"] {
  --opacity-backdrop: 0.3;
  --opacity-menu-item: 0.075;
  --em-background: rgb(0 0 0 / 15%);
}

/* Dark Theme */
[data-theme="dark"] {
  --opacity-backdrop: 0.7;
  --opacity-menu-item: 0.15;
  --em-background: rgb(255 255 255 / 10%);
}





/* ==== FLEX LAYOUT ==== */

/* Flex-Layout */
.flex-layout {
  display: flex;
}

.flex {
  flex: 1;
}

/* Screens & Fixed Layouts */
.screen.flex-layout, .flex-layout[data-fixed] {
  width: 100vw;
  height: 100vh;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 20;
  background: inherit;
  color: inherit;
}

/* Vertical Flex-Layout */
.vertical.flex-layout {
  flex-direction: column;
}

/* Horizontal Flex-Layout */
.horizontal.flex-layout {
  flex-direction: row;
}

/* Centered Flex-Layout */
.centered.flex-layout {
  justify-content: center;
  align-items: center;
}

/* JustCenter Flex-Layout */
.center.flex-layout {
  align-items: center;
}

/* ==== END of FLEX LAYOUT ==== */



/* Full Bleed */
[data-fullbleed] {
  margin: 0;
  padding: 0;
}


/* Fit nicely into its container */
[data-fit] {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  width: 100%;
  height: 100%;
}

/* Hidden */
[hidden], [data-hidden] {
  display: none !important;
}

/* Disabled */
[data-disabled="true"], [disabled] {
  --nav-link-opacity: var(--opacity-icon-disabled);

  pointer-events: none !important;
  cursor: default !important;
  opacity: var(--opacity-text-disabled);
}

/* NO SCROLLBARS Property */
[data-noscrollbars] {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

[data-noscrollbars]::-webkit-scrollbar {
  display: none;
}


/* Flex SPAN */
span[data-flex] {
  display: flex;
  flex: 1;
}

span.Locator {
  background: var(--locator-background-color, var(--tertiary-container-color));
  color: var(--locator-text-color, var(--on-tertiary-container-color));
  font-family: var(--locator-font-family, inherit);
  font-weight: var(--locator-font-weight, inherit);
  font-size: var(--locator-font-size, inherit);
}

/* Naked Buttons */
button[data-naked] {
  border: 0;
  background: none;
  list-style: none;
}

a[data-naked] {
  -webkit-tap-highlight-color: transparent;
  text-decoration: none;
  outline: none;
}

/* Naked Lists */
ul[data-naked], li[data-naked] {
  padding: 0;
  list-style: none;
}


/* Top Position  */
.top { top: 0; }

/* Right Position  */
.right { right: 0; }

/* Bottom Position  */
.bottom { bottom: 0; }

/* Left Position  */
.left { left: 0; }


/* 
 * --> Narrow - Device <--
 * Phone: ? (Responsive)
 * Dimension: ~460px (width)
 *
 * ***************************************
 * when the viewport is lesser than 460px,
 * layout changes to a narrow-layout.
 * ***************************************
 */

/* The Boss - html */
html {
  width: 100%;
  height: 100%;
}

/* Body or appContainer */
body, #appContainer {
  display: flex;
  flex-direction: column;
  position: relative;
  width: 100%;
  height: 100%;
  background-color: var(--background-color);
  color: var(--on-background-color);
  fill: var(--on-background-color);
   
  /* Support for all Webkit browsers. */
  -webkit-font-smoothing: antialiased;

  /* Support for Safari and Chrome. */
  text-rendering: optimizelegibility;

  /* Support for Firefox. */
  -moz-osx-font-smoothing: grayscale;
  transition: background-color 200ms ease;
  
  /* Support for IE. */
  font-feature-settings: 'liga';
  overflow: hidden;
}

/* App Container */
#appContainer {} 

/* All children of App Container  */
#appContainer > * {
  /* pointer-events: none;
  user-select: none; */
}


/* Progress Bar */
div.progress-bar {
  position: relative;
  width: var(--progress-bar-width, 100%);
  height: var(--progress-bar-height, 4px);
  z-index: 1000;
  overflow: hidden;
  pointer-events: none;
  user-select: none;
}

div.progress-bar::before {
  content: '';
  position: absolute;
  inset: 0;
  width: inherit;
  height: inherit;
  background-color: var(--primary-container-color);
}

div.progress-bar > span.progress-bar-value {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: var(--progress-bar-value-width, 50%);
  background-color: var(--primary-color);
  z-index: 1000;
}

@keyframes intermediate-horiz {
  from { left: -50%; }
  to { left: 100%; }
}

/* Progress Bar - Intermediate */
div.progress-bar.intermediate > span.progress-bar-value {
  animation: intermediate-horiz 2s infinite;
}



/* Dialogs */
#dialogs, .Dialogs {
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 101;
  pointer-events: none;
  box-sizing: border-box;
  padding: var(--dialogs-padding, 24px);
}


/* Dialog */
#dialog, .dialog {
  width: 100%;
  position: relative;
  user-select: none;
  pointer-events: auto;
  background: var(--dialog-color-background, var(--background-color));
  color: var(--dialog-color-on-background, var(--on-background-color));
  box-sizing: border-box;
  padding: var(--dialog-padding, 8px 16px);
  border-radius: var(--dialog-border-radius, 12px);

  /* opacity: 0; */
  text-align: center;
  max-width: 512px;

  --fade-in-animation-delay: var(--dialog-animation-delay, 200ms);
}

/* Dialog Title */
.dialog-title {
  margin: 16px 0;
}

/* Dialog Message */
.dialog-message, .dialog-msg {
  opacity: var(--opacity-text-inactive);
}

/* Dialog Buttons */
.dialog-buttons {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/* Each Dialog Button */
a.dialog-button, a[role="button"].dialog-button {
  width: 100%;
  height: auto;
  border-radius: 8px;
  margin: 8px 0;
  background: var(--dialog-button-background-color, inherit);
  color: var(--dialog-button-text-color, inherit);
  font-size: 20px;
  line-height: 50px;
  letter-spacing: 1px;
  font-weight: bold;
  text-align: center;
  align-items: center;
}

/* Dialog Button with default attribute */
a.dialog-button[data-default], a[role="button"][data-default].dialog-button {
  color: var(--dialog-button-color-default, var(--primary-color));
}

/* Hover on Dialog Button */
a.dialog-button:hover, a[role="button"].dialog-button:hover {
  background: var(--dialog-button-color-hover, var(--surface-variant-color));
}

a.dialog-button:focus, a[role="button"].dialog-button:focus {
  outline: 3px solid;
  outline-color: var(--tertiary-color);
}


/* dialog-list */
ul.dialog-list {
  width: var(--dialog-list-width, 100%);
  height: var(--dialog-list-height, auto);
  max-height: var(--dialog-list-max-height, 300px);
  overflow: hidden auto;
  margin: var(--dialog-list-margin, 2rem 0);
}


/* dialog-list-item */
li.dialog-list-item {
  position: relative;
  box-sizing: border-box;
  width: var(--dialog-list-item-width, 100%);
  height: var(--dialog-list-item-height, auto);
  padding: var(--dialog-list-item-padding, 0.75rem 1rem);
  transform: scale(1);
  transform-origin: left;
  opacity: var(--opacity-dialog-list-item, 0.68);
  user-select: none;
  transition: all 0.2s ease-in-out;
}

li.dialog-list-item:hover {
  opacity: var(--opacity-dialog-list-item-hover, 1);
}


li.dialog-list-item[data-shrinks]:active {
  transform: scale(0.9);
} 


li.dialog-list-item .checkbox,
li.dialog-list-item .radio {
  width: var(--dialog-list-item-checkbox-size, 20px);
  height: var(--dialog-list-item-checkbox-size, 20px);
  outline: 2px solid var(--dialog-list-item-checkbox-outline-color, var(--outline-color));
  margin-right: 1.25rem;
  outline-offset: 3px;
}

li.dialog-list-item .checkbox {
  border-radius: 10%;
}

li.dialog-list-item .radio {
  border-radius: 50%;
}


/* [data-selected="true"] dialog list item */
li.dialog-list-item[data-selected="true"] {
  font-weight: bold; 
  opacity: var(--opacity-dialog-list-item-selected, 1);
}


li.dialog-list-item[data-selected="true"] .checkbox,
li.dialog-list-item[data-selected="true"] .radio {
  outline-color: var(--dialog-list-item-checkbox-selected-border-color, var(--primary-color));
  background: var(--dialog-list-item-checkbox-selected-background-color, var(--primary-color));
}

/* TODO: dialog-list-item-link */








/* Screens */
#screens {
  z-index: 100;
} 

/* Pages */
#pages {
  z-index: 1;
  background-color: var(--background-color);
}

/* [data-nolabels] Pages */
#pages[data-nolabels] .nav-label {
  display: none !important;
}


/* Menus */
#menus {
  z-index: 3;
}


/* === SPECIFIC VIEWPORTS ONLY === */

[narrow-only], [narrow-and-wide-only], [narrow-and-tablet-only] {
  display: initial !important;
}

[tablet-only] {
  display: none !important;
}

[wide-only], [desktop-only] {
  display: none !important;
}


/* --- [ App Layout ] --- */

.app-layout {
  display: block;
  position: relative;
  box-sizing: border-box;
  flex: 1;
  overflow: hidden scroll;
  width: 100%;
  height: 100%;
  scroll-behavior: smooth;
  background-color: var(--app-layout-background-color, var(--background-color));
}

.app-layout[data-navbar-enabled="true"] {
  max-height: calc(100vh - var(--navbar-height, 60px));
}

.app-layout.view {
  position: absolute;
  background: var(--background-color);
  z-index: 10;
}



/* Header of App Layout */
.app-layout > header {
  display: flex;
  position: relative;
  flex-direction: column;
  width: var(--app-header-width, 100%);
  height: var(--app-header-height, auto);
  margin-bottom: var(--app-header-margin-bottom, 0);
  margin-top: var(--app-header-margin-top, 0);
  background-color: var(--app-header-background-color, var(--background-color));
}

.app-layout > header[data-with-overlay]::before {
  background: var(--app-header-overlay-background, var(--background-color));
  inset: 0;
  content: "";
  position: absolute;
  opacity: var(--app-header-overlay-opacity, 0.5);
  width: 100%;
  height: 100%;
  z-index: var(--app-header-overlay-z-index, 0); 
}

.app-layout > header[data-with-overlay][data-smooth]::before {
  background: var(--app-header-overlay-background, linear-gradient(180deg, var(--app-header-overlay-color-start, var(--background-color)), transparent, var(--app-header-overlay-color-end, var(--background-color))));
}

.app-layout > header[data-opaque]::before {
  opacity: var(--app-header-opacity, 1);
}

[data-scroll-lock] {
  overflow: hidden !important;
}

/* Overlay */
.overlay {
  pointer-events: none;
}

/* Overlay in Header */

#header > .overlay {
 z-index: 2;
 background: var(--background-color);
}

/* Overlay of a smooth header */
#header[data-smooth] > .overlay {
  /* background: linear-gradient(180deg, rgba(0,0,0,0.5), transparent, var(--background-color)); */
  background: linear-gradient(180deg, var(--background-color), transparent, var(--background-color));
}


/* App Bars in Header */
header > .app-bar, .AppBar {
  display: flex;
  flex-direction: row;
  align-items: center;
  position: relative;
  width: 100%;
  height: var(--app-bar-size, 54px);
  box-sizing: border-box;
  padding: 0 var(--app-bar-padding, 16px);
  background: var(--app-bar-color-background, inherit);
  color: var(--app-bar-color-on-background, inherit);
  transition: opacity 0.2s ease;

}

/* Enable Header Sticky */
header[data-sticky-enabled] {
  position: sticky;
  top: 0;
  z-index: 10;
}

/* Sticky header */
header.is-sticky {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  z-index: 10;
}

/* Sticky app bar */
header.is-sticky > .app-bar.sticky {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 20;
}


/* Title Wrappers in App Bar */
.app-bar .title-wrapper,
.AppBar .TitleWrapper {
    display: flex;
    flex-direction: column;
    flex: 1;
    padding: 0 8px;
    height: 100%;
    justify-content: center;
    box-sizing: border-box;
    overflow: hidden;
    text-overflow: ellipsis;
}


.app-bar a.title-wrapper,
.AppBar a.TitleWrapper {
  flex: initial;
  color: inherit;
  opacity: var(--opacity-text-disabled);
  text-underline-offset: 19px;
  text-decoration-thickness: var(--app-bar-underline-thickness, 2px);
}

.app-bar h2.app-title,
.AppBar h2.AppTitle {
  overflow: visible;
  font-weight: bold;
}

.app-bar a.title-wrapper:hover,
.AppBar a.TitleWrapper:hover {
  opacity: var(--opacity-text-active);
}

.app-bar a.title-wrapper[data-active="true"],
.AppBar a.TitleWrapper[data-active="true"] {
  opacity: 1;
  pointer-events: none;
  text-decoration: underline;
  text-decoration-color: var(--primary-color);
  text-underline-offset: 19px;
  text-decoration-thickness: var(--app-bar-underline-thickness, 2px);
}



/* Links as Button in App Bar */
.app-bar a[role="button"],
.AppBar a[role="button"] {
  margin: 0;
  color: var(--on-background-color);
  opacity: var(--opacity-md-icon-inactive);
}

.app-bar a[role="button"]:hover,
.AppBar a[role="button"]:hover {
  color: var(--primary-color);
  opacity: var(--opacity-md-active);
  text-decoration: none;
}


/* ---[ End of App Layout ]--- */

/* == Views Container == */

#views.container {}


#views.container > .view:not([data-active="true"]) {
  display: none !important;
}

/* -- End of Views Container -- */


/* === Toasts Styles === */

/* All Toasts */
#toasts,
main > .Toasts,
aside > .Toasts {
  z-index: 100;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-end; /* b4: end */
  pointer-events: none;
  padding: 3rem 1rem;
  box-sizing: border-box;

  --fade-in-animation-duration: 700ms;
}


/* Toast */
.toast {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  background-color: var(--on-background-color);
  color: var(--background-color);
  padding: 0.5rem 1.25rem;
  border-radius: 32px;
  box-sizing: border-box;
  font-size: 1rem;
  margin: 0 auto;
  opacity: var(--opacity-md-active);
}


/* Toast Emojis */
.toast-emoji {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: 24px;
  height: 24px;
  background-color: transparent;
  margin-right: 0.25rem;
}

.toast-emoji:not([data-emoji-hidden]) {
  background-image: var(--toast-emoji-image);
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
}


/* Success - Toast Emoji */
.toast-emoji.success,
.toast-emoji.st {
  --toast-emoji-image: url('../images/gifs/emoji_thumbs_up.gif');
}


/* ==== End of Toasts Styles === */


/* MAIN part of App Layout */
#appLayout > main, main {
  position: relative;
  flex: 1;
  width: 100%;
  height: 100%;
  z-index: 99;
}

/* ASIDE part of App Layout */
#appLayout > aside, aside {
  display: none;
  position: relative;
  width: var(--aside-width, 50%);
  height: 100%;
  z-index: 100;
}


.page:not([data-opened="true"]) {
  display: none !important;
}


/* App Logo of any ASIDE */
aside > span.app-logo {
  --app-logo-color: var(--outline-color);

  opacity: var(--opacity-md-icon-disabled);

  --app-logo-size: 50%;
}


/* ------ */


/* App Header */
#appHeader {
  display: block;
  position: relative;
  width: 100%;
  height: auto;
}



/* Header Content */
#headerContent {}



/* ------ */

/* ------ */


/* all App Bars in App Header */
#appHeader > .app-bar,
.AppBar {
  display: flex;
  flex-direction: row;
  align-items: center;
  position: relative;
  width: 100%;
  height: var(--app-bar-size, 54px);
  box-sizing: border-box;
  padding: 0 var(--app-bar-padding, 16px);
  background: var(--app-bar-color-background, inherit);
  color: var(--app-bar-color-on-background, inherit);
}


/* Title Wrappers in App Header */
#appHeader .title-wrapper {
    display: flex;
    flex-direction: column;
    flex: 1;
    padding: 0 8px;
    height: 100%;
    justify-content: center;
    box-sizing: border-box;
    overflow: hidden;
    text-overflow: ellipsis;
}

/* App Bar */
#appBar {}

/* Links as Button in App Bar */
#appBar a[role="button"] {
  margin: 0;
  color: var(--on-background-color);
  opacity: var(--opacity-md-icon-inactive);
}

#appBar a[role="button"]:hover {
  color: var(--primary-color);
  opacity: var(--opacity-md-active);
  text-decoration: none;
}

/* Nav Bar Styles & footer of Main */
.nav-bar, main > footer {
  position: relative;
  box-sizing: border-box;
  background: var(--background-color);
  font-size: 0.75rem;
}

/* Vertical Nav Bar - or - Side Bar */
.nav-bar.vertical, #sideBar {
  --slide-from-left-animation-duration: 300ms;

  width: var(--nav-bar-size, 54px);
  min-width: var(--nav-bar-size, 54px);
  height: 100%;
  padding: var(--side-bar-padding-vertical, 0);
  background-color: var(--side-bar-background-color, var(--background-color));
}


/* Nav Labels of SideBar */
#sideBar .nav-label {
  font-size: var(--side-bar-label-size, 0.75rem);
  line-height: 1.25rem;
}


/* Nav Labels of NavBar */
#navBar .nav-label, .nav-bar .nav-label {
  font-size: var(--nav-bar-label-size, 0.6rem);
  top: -4px;
}

/* All horizontal dividers in vertical nav bar */
.nav-bar.vertical span.divider.horizontal,
#sideBar span.divider.horizontal {
  position: relative;
  width: var(--side-bar-divider-width, 70%);
  margin: 0 auto;
}


/* Content of Vertical Nav Bar / Side Bar */
.nav-bar.vertical > [data-content],
#sideBar > [data-content] {
  width: 100%;
  height: auto;
  max-height: calc(100vh - 150px);
  flex: 1;
  overflow: hidden auto;
  -webkit-overflow-scrolling: touch;
  scroll-behavior: smooth;
}



/* Responsive Vertical Nav Bar */

/* HACK: allows me to display the nav bar in it's [demo page](component/demo/nav-bar.php) */
.nav-bar.vertical[data-responsive] {
  display: none;
}

/* All horizontal dividers in vertical nav bar */
.nav-bar.vertical span.divider.horizontal {
  position: relative;
  width: 70%;
  margin: 0 auto;
}

/* Horizontal Nav Bar & Footer of Main */
.nav-bar.horizontal, main > footer {
  height: var(--nav-bar-size, 60px);
}

/* Horizontal Nav Bar */
.nav-bar.horizontal, #navBar {
  --slide-from-down-animation-duration: 300ms;

  padding: 0 var(--nav-bar-padding-horizontal, 0.5rem);
  width: 100%;
  justify-content: space-between;
}

/* Nav Links in a Horizontal Nav Bar */
.nav-bar.horizontal .nav-link {
  width: var(--nav-bar-size, calc(100% / 5));
  overflow: hidden;
}

.nav-bar.horizontal .nav-link > .label {
  line-height: 1.25rem;
  margin-bottom: -0.5rem;
  white-space: nowrap;
  overflow: hidden;
  width: 100%;
  text-align: center;
}


/* App Logo | SPAN */
span.app-logo {
  display: block;
  position: relative;
  width: var(--app-logo-size, 32px);
  height: var(--app-logo-size, 32px);
  max-width: var(--app-logo-size-max, 512px);
  max-height: var(--app-logo-size-max, 512px);
  background-color: var(--app-logo-color, var(--on-background-color));
  opacity: var(--app-logo-opacity, inherit);
  mask: url('../../assets/logos/ab-logo.svg') no-repeat 50% 50%;
  mask-size: cover;
}

/* Outlined App Logo | SPAN */
span[data-type="outlined"].app-logo {
  mask: url('../../assets/logos/ab-logo_outline.svg') no-repeat 50% 50%;
}

/* --- Dividers --- 
 *
 * NOTE: To change the diviers position, 
 * you can apply either `.top`, `.right`, `.bottom` and/or `.left` classes
 */

/* Divider | SPAN */
span.divider {
  display: block;
  position: absolute;
  background: var(--divider-color, var(--outline-color));
  opacity: var(--divider-opacity, var(--opacity-icon-disabled, 0.5));
  pointer-events: none;
  z-index: 10; /* b4: 100 */
}

/* Horizontal Dividers */
span.divider.horizontal {
  width: 100%;
  left: 0;
  height: var(--divider-size, 1px);
}

/* Vertical Dividers */
span.divider.vertical {
  width: var(--divider-size, 1px);
  top: 0;
  height: 100%;
}

/* Icon-Button */
button.icon-button, a[role="icon-button"], a[role="like-button"] {
  display: block;
  position: relative;
  width: var(--icon-button-size, 40px);
  height: var(--icon-button-size, 40px);
  background: none;
  border: 0;
  box-sizing: border-box;
  padding: var(--icon-button-padding, 8px);
  color: var(--icon-button-color, var(--on-background-color));
  fill: var(--icon-button-color, var(--on-background-color));
  opacity: var(--icon-button-opacity, var(--opacity-md-icon-inactive));
  cursor: pointer;
  user-select: none;
}

button.icon-button.go-back-btn:hover::before, a[role="icon-button"].go-back-btn:hover::before,
a[role="like-button"].go-back-btn:hover::before {
  background: none !important;
}

/* Hover over Icon-Button */
button.icon-button:not(:disabled):hover,
a[role="icon-button"]:not(:disabled):hover,
a[role="like-button"]:not(:disabled):hover {
  opacity: var(--icon-button-hover-opacity, var(--opacity-md-active));
}

/* Whenever Icon-Buttons gain focus */
button.icon-button:focus-visible,
a[role="icon-button"]:focus-visible,
a[role="like-button"]:focus-visible {
  outline: none;
  opacity: var(--icon-button-hover-opacity, var(--opacity-md-active));
  color: var(--icon-button-color-focus, var(--tertiary-color));
  fill: var(--icon-button-color-focus, var(--tertiary-color));
}

/* Icon in Icon-Button */
button.icon-button .icon, a[role="icon-button"] .icon, a[role="like-button"] .icon {
  width: 100%;
  height: 100%;

  /* for `.material-icons` */

  /* Calulate the font-size relative to the size of icon-button */
  font-size: calc(var(--icon-button-size, 40px) - (var(--icon-button-padding, 8px) * 2));
  color: inherit !important;
  fill: inherit !important;
  pointer-events: none;
}

/* active links of Icon Buttons  */
a[data-active="true"] .icon-button, a[role="icon-button"][data-active="true"], a[role="like-button"][data-active="true"],
.icon-button[data-active="true"] {
  --icon-button-opacity: var(--icon-button-active-opacity, 1);
  --icon-button-color: var(--icon-button-active-color, var(--primary-color));
}

/* ------ */


/* Content */
#content, #pages .pages-wrapper {
  display: block;
  position: relative;
  box-sizing: border-box;
  flex: 1;
  overflow: scroll;
  scroll-behavior: smooth;
}

aside .pages-wrapper {
  position: absolute;
  z-index: 10;
}

/* Container of Content */
#content > .container {
  width: 100%;
  height: calc(100vh - var(--app-bar-size, 54px));
  box-sizing: border-box;
  padding: 8px 16px;
}

/* App Layout [data-content] styles */


/* [data-content] */
[data-content] {
  display: flex;
  flex-direction: column;
  position: relative;
  box-sizing: border-box;
  flex: 1;
  width: 100%;
  scroll-behavior: smooth;
}

/* [data-content] Scrollable */
[data-content][data-scrollable] {
  overflow: scroll;
}

[data-content] > .container[data-not-connected] {
  /* text-align: center; */
}


[data-content] > .container[data-not-connected] p[data-info] {
  max-width: 420px;
}

/* Container of [data-content] */
.app-layout > [data-content] > .container {
  width: 100%;
  min-height: calc(100vh - var(--app-bar-size, 54px));
  height: 100%;/* b4: calc(100vh - var(--app-bar-size, 54px)); */
  box-sizing: border-box;
  padding: 8px 16px;
  transition: opacity 0.2s ease-in-out;
}

/* [data-empty="true"] Container in [data-content] */
[data-content] > .container[data-empty="true"] {
  text-align: center;
  box-sizing: border-box;
  padding: 24px;
  user-select: none;
}

/* ==== SPINNERS ==== */

span.spinner {
  display: block;
  position: relative;
  width: var(--spinner-size, 48px);
  height: var(--spinner-size, 48px);
  background-color: var(--spinner-color, var(--on-background-color));
  opacity: var(--spinner-opacity, inherit);
  mask: var(--spinner-url, url("../spinners/3-dots-scale.svg")) no-repeat 50% 50%;
  mask-size: cover;
}

span.spinner.dots-3 {
  --spinner-url: url("../spinners/3-dots-scale.svg");
}

span.spinner.dots-12 {
  --spinner-url: url("../spinners/12-dots-scale-rotate.svg");
}


/* === END of SPINNERS === */



/* [data-busy] Container in [data-content] */
[data-content] > .container[data-busy] {

}

[data-content] > .container[data-empty="true"] .doodle {
  --empty-doodle-image: url('../images/lock.png');
}


[data-content] > .container[data-empty="true"] .doodle {
  width: var(--empty-doodle-size, 200px);
  height: var(--empty-doodle-size, 200px);
  background-color: inherit;
  margin-top: -48px;
  background-image: var(--empty-doodle-image, url('../images/doodles/doodle.svg'));
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}


[data-content] > .container[data-empty="true"] .doodle[data-mask] {
  background-image: none;
  background-color: var(--empty-doodle-color, var(--on-background-color));
  opacity: var(--empty-doodle-opacity, var(--opacity-md-icon-inactive));
  mask-image: var(--empty-doodle-image, url('../images/doodles/doodle-outline.svg'));
  mask-repeat: no-repeat;
  mask-position: center;
  mask-size: cover;

}


[data-content] > .container[data-empty="true"] .ddd {
  width: var(--ddd-size, 200px);
  height: var(--ddd-size, 200px);
  background-color: inherit;
  background-image: var(--ddd-image-url, url('../images/3d/likes_woman_excited.png'));
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}



/** Empty Container Title */
.container[data-empty="true"] h2, .container[data-empty="true"] [data-title] {
  margin: 16px;
  margin-bottom: 6px;
  font-size: 24px;
  line-height: 30px;
}

/** Empty Container Note or Description */
.container[data-empty="true"] p, .container[data-empty="true"] [data-note] {
  margin-top: 0;
  opacity: 0.6;
  font-size: 16px;
  line-height: 24px;
  max-width: 300px;
}

.container[data-empty="true"] p span.icon {
  position: relative;
  top: 6px;
}

.container[data-empty="true"] button, .container[data-empty="true"] a[role="button"] {
  padding: 0.5rem 3rem;
  text-transform: capitalize;
}

/* === end of [data-content] styles === */


/* ===<<< Form ..+.. Input Default Styles >>>=== */

/* Form Styles */
form {
  --icon-button-size: 30px;
  --icon-button-padding: 4px;

  width: 100%;
  height: auto;
  padding: 8px 16px;
  box-sizing: border-box;
  max-width: var(--form-max-width, 450px);
  margin: 24px auto;
}


form[disabled="true"], form[disabled] {
  opacity: 0.9;
}


/* All the children of form */
form > * {
  opacity: 0;
  animation: fadeIn 0.5s ease var(--form-animation-delay, 0.2s) forwards, slideFromDown 0.5s ease var(--form-animation-delay, 0.2s);
}


/* Let's gradually assign an animation delay to up to 10 children of `<form>` */

/* TODO: Find a better way to do this :) */

/* First child of form */
form > *:nth-child(1) {
  --form-animation-delay: 0.2s;
}

/* Second child of form */
form > *:nth-child(2) {
  --form-animation-delay: 0.3s; /* 0.2 + 0.1 */
}


/* Third child of form */
form > *:nth-child(3) {
  --form-animation-delay: 0.4s; /* 0.3 + */
}

/* Fourth child of form */
form > *:nth-child(4) {
  --form-animation-delay: 0.5s;
}


/* Fifth child of form */
form > *:nth-child(5) {
  --form-animation-delay: 0.6s;
}


/* First child of form */
form > *:nth-child(6) {
  --form-animation-delay: 0.7s;
}

/* Second child of form */
form > *:nth-child(7) {
  --form-animation-delay: 0.8s;
}


/* Third child of form */
form > *:nth-child(8) {
  --form-animation-delay: 0.9s;
}

/* Fourth child of form */
form > *:nth-child(9) {
  --form-animation-delay: 1s;
}


/* Fifth child of form */
form > *:nth-child(10) {
  --form-animation-delay: 1.1s;
}

/* all labels next to an input */
label {
  pointer-events: none;
  user-select: none;
  position: absolute;
  left: 0;
  top: 0;
  transform: translateY(0);
  transition: all .2s ease;
}


label span {
  color: var(--label-span-color, var(--secondary-color));
  font-weight: bold;
}

/* Labels with [data-raised] attribute / property */
label[data-raised="true"] {
  transform: translateY(-18px);
  font-size: 12px;
  line-height: 20px;
  letter-spacing: 1.2px;
}

/* Input Wrapper */
.input-wrapper {
  position: relative;
  margin: 12px 0 24px;
  overflow: visible;
  transition: margin .2s ease;
}

/* If the Input Wrapper has an error */
.input-wrapper[data-has-error="true"] {
  margin-bottom: var(--input-wrapper-error-margin, 48px);
}

.input-wrapper[data-has-msg="true"] {
  margin-bottom: var(--input-wrapper-message-margin, 48px);
}


/* Input Styles */
input, textarea {
  background: inherit;
  color: inherit;
  border: 0;
  outline: 0;
  flex: 1;
  margin-bottom: 8px;
}

/* Password Input */
input[data-type="password"] {}

/* Submit Button / Inputs & Outlined Buttons */
input[data-type="submit"], button[data-type="outlined"], a[role="button"][data-type="outlined"] {
  --material-icon-color: var(--ab-button-text-color, inherit);

  border: 2px solid var(--ab-button-outline-color, var(--outline-color));
  border-radius: 8px;
  padding: 8px 16px;
  font-size: 18px; /* b4: 16px */
  line-height: 32px;
  width: var(--ab-button-width, fit-content);
  height: var(--ab-button-height, fit-content);
  opacity: var(--opacity-text-inactive);
  cursor: pointer;
  margin-top: 24px;
  margin-bottom: 16px;
  background: var(--ab-button-background-color, transparent);
  color: var(--ab-button-text-color, inherit);
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  transition: all .2s ease;
}


/* Whenever a button that expands is hovered and/or gains focus */
button[data-type="outlined"][data-expands="true"]:hover, a[role="button"][data-type="outlined"][data-expands="true"]:hover,
button[data-type="outlined"][data-expands="true"]:focus-visible, a[role="button"][data-type="outlined"][data-expands="true"]:focus-visible,
button.icon-button[data-expands="true"]:hover, button.icon-button[data-expands="true"]:focus-visible {
  transform: scale(1.1);
}

/* Whenever a button that shrinks is pressed */
button[data-type="outlined"][data-shrinks="true"]:active, a[role="button"][data-type="outlined"][data-shrinks="true"]:active,
button.icon-button[data-shrinks="true"]:active {
  transform: scale(0.95);
}



/* Outlined Button on hover */
button[data-type="outlined"]:hover, a[role="button"][data-type="outlined"]:hover,
input[data-type="submit"]:hover {
  --material-icon-color: var(--ab-button-text-color-hover, var(--primary-color));
  --ab-button-background-color: var(--ab-button-background-color-hover, transparent);
  --ab-button-text-color: var(--ab-button-text-color-hover, var(--primary-color));
  --ab-button-outline-color: var(--ab-button-outline-color-hover, var(--primary-color));

  opacity: 1;
}

/* Whenever a outlined button gains focus */
button[data-type="outlined"]:focus-visible, a[role="button"][data-type="outlined"]:focus-visible,
input[data-type="submit"]:focus, input[data-type="submit"]:focus-visible {
  --material-icon-color: var(--ab-button-background-color-focus, var(--tertiary-color));
  --ab-button-background-color: var(--ab-button-background-color-focus, transparent);
  --ab-button-text-color: var(--ab-button-text-color-focus, var(--tertiary-color));
  --ab-button-outline-color: var(--ab-button-outline-color-focus, var(--tertiary-color));

  outline: none;
  opacity: 1;

}

/* [data-type="contained"] submit input  */
input[data-type="submit"][data-type="contained"] {
  background: var(--primary-color);
  color: var(--on-primary-color);
  border: 0;
}

/* Contained Button */
button[data-type="contained"], a[role="button"][data-type="contained"] {
  --material-icon-color: var(--ab-button-background-color, var(--on-primary-container-color));

  background: var(--ab-button-background-color, var(--primary-container-color));
  color: var(--ab-button-text-color, var(--on-primary-container-color));
  padding: var(--ab-button-padding, 6px 12px);
  border-radius: 8px;
  font-size: 18px; /* b4: 16px */
  line-height: 32px;
  width: var(--ab-button-width, fit-content);
  height: var(--ab-button-height, fit-content);
  border: 0;
  outline: none;
  font-weight: bold;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  cursor: pointer;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
  transform: scale(1);
  transition: all 0.2s ease;
}

/* Whenever a button that expands is hovered and/or gains focus */
button[data-type="contained"][data-expands="true"]:hover, a[role="button"][data-type="contained"][data-expands="true"]:hover,
button[data-type="contained"][data-expands="true"]:focus-visible, a[role="button"][data-type="contained"][data-expands="true"]:focus-visible,
button.icon-button[data-expands="true"]:hover, button.icon-button[data-expands="true"]:focus-visible {
  transform: scale(1.1);
}

/* Whenever a button that shrinks is pressed */
button[data-type="contained"][data-shrinks="true"]:active, a[role="button"][data-type="contained"][data-shrinks="true"]:active,
button.icon-button[data-shrinks="true"]:active {
  transform: scale(0.95);
}



/* Contained Button on hover */
button[data-type="contained"]:hover, a[role="button"][data-type="contained"]:hover {
  --material-icon-color: var(--ab-button-background-color-hover, var(--on-primary-color));
  --ab-button-background-color: var(--ab-button-background-color-hover, var(--primary-color));
  --ab-button-text-color: var(--ab-button-text-color-hover, var(--on-primary-color));

  text-decoration: none;
}

/* Whenever a contained button gains focus */
button[data-type="contained"]:focus-visible, a[role="button"][data-type="contained"]:focus-visible {
  --material-icon-color: var(--ab-button-background-color-focus, var(--on-tertiary-color));
  --ab-button-background-color: var(--ab-button-background-color-focus, var(--tertiary-color));
  --ab-button-text-color: var(--ab-button-text-color-focus, var(--on-tertiary-color));

  outline: none;
}



/* Contained [text] */
button[data-type="text"], a[role="button"][data-type="text"] {
  --material-icon-color: var(--ab-button-text-color, var(--on-background-color));

  background: none;
  color: var(--ab-button-text-color, var(--on-background-color));
  padding: var(--ab-button-padding, 6px 12px);
  border-radius: 8px;
  font-size: 18px; /* b4: 16px */
  line-height: 32px;
  width: var(--ab-button-width, fit-content);
  height: var(--ab-button-height, fit-content);
  border: 0;
  outline: none;
  font-weight: bold;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  cursor: pointer;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
  transform: scale(1);
  transition: all 0.2s ease;
}

button[data-type="text"]::before, a[role="button"][data-type="text"]::before {
  content: "";
  position: absolute;
  inset: 0;
  background: var(--ab-button-background-color, var(--on-background-color));
  opacity: var(--ab-button-text-background-color-opacity, 0.1);
  width: 100%;
  height: 100%;
}


/* Whenever a button that expands is hovered and/or gains focus */
button[data-type="text"][data-expands="true"]:hover, a[role="button"][data-type="text"][data-expands="true"]:hover,
button[data-type="text"][data-expands="true"]:focus-visible, a[role="button"][data-type="text"][data-expands="true"]:focus-visible,
button.icon-button[data-expands="true"]:hover, button.icon-button[data-expands="true"]:focus-visible {
  transform: scale(1.1);
}

/* Whenever a button that shrinks is pressed */
button[data-type="text"][data-shrinks="true"]:active, a[role="button"][data-type="text"][data-shrinks="true"]:active,
button.icon-button[data-shrinks="true"]:active {
  transform: scale(0.95);
}



/* Text Button on hover */
button[data-type="text"]:hover, a[role="button"][data-type="text"]:hover {
  --material-icon-color: var(--ab-button-background-color-hover, var(--primary-color));
  --ab-button-background-color: var(--ab-button-background-color-hover, var(--primary-color));

  text-decoration: none;
  color: var(--ab-button-text-color-hover, var(--primary-color));
}

/* Whenever a text button gains focus */
button[data-type="text"]:focus-visible, a[role="button"][data-type="text"]:focus-visible {
  --material-icon-color: var(--ab-button-background-color-focus, var(--tertiary-color));
  --ab-button-background-color: var(--ab-button-background-color-focus, var(--tertiary-color));

  outline: none;
  color: var(--ab-button-color-focus, var(--tertiary-color));
}



button[data-iconpos="right"] > .material-icons, 
button[data-iconpos="right"] > .material-symbols-rounded, 
button[data-iconpos="right"] > .icon {
  margin-left: var(--ab-button-icon-margin, 8px);
}



button[data-iconpos="left"] > .material-icons, 
button[data-iconpos="left"] > .material-symbols-rounded, 
button[data-iconpos="left"] > .icon {
  margin-right: var(--ab-button-icon-margin, 8px);
}


/* End of Button Styles */



/* Iput Indicator */
.input-indicator {
  height: 2px;
  width: 100%;
  position: absolute;
  left: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  pointer-events: none;

  /* margin: 8px 0; */
}

/* Error style of Input Indicator */
.input-indicator.error {
  --input-indicator-color: var(--error-color);
}

/* Bar of Input Indicator */
.input-indicator span[data-bar] {
  width: inherit;
  height: inherit;
  background: var(--outline-color);
  display: block;
  opacity: var(--opacity-md-icon-inactive);
}

/* Value of Input Indicator */
.input-indicator span[data-val] {
  position: absolute;
  top: 0;
  margin: 0 auto;
  height: inherit;
  width: 0%;
  background: var(--input-indicator-color, var(--primary-color));
  opacity: 0;
  transition: width .2s ease, opacity .3s ease;
}


/* Set the width of the indicator value (i.e. span[data-val]) to 100%:
 * 1. whenever an input inside a form gains focus
 * 2. if the input indicator has a `no-effect` attribute
 * */
input:focus ~ .input-indicator > span[data-val], .input-indicator[data-no-effect="true"] span[data-val],
textarea:focus ~ .input-indicator > span[data-val] {
  width: 100%;
  opacity: 1;
}


/* Input Message */
p.input-message {
  margin: 8px 4px;
  width: 100%;
  height: 35px;
  display: block;
  position: absolute;
  font-size: 12px;
  bottom: 0;
  box-sizing: border-box;
  left: 0;
  color: var(--on-background-color);
  transform: translateY(150%);
  line-height: 16px;
  pointer-events: none;
  font-weight: normal;
  opacity: var(--opacity-text-active) !important;
}

p.input-message.error {
  color: var(--error-color);
}

/* ===>>> End of Form ..+.. Input Default Styles  <<<=== */


/* === Dialog Styles === */

/* Backdrop */
#backdrop, .Backdrop {
  z-index: 100;
  background: var(--backdrop-color, rgb(0 0 0 / var(--opacity-backdrop, 0.7)));
}

#backdrop:not(.fadeOut), .Backdrop:not(.fadeOut) {
  animation: fadeIn 0.5s ease-in-out forwards;
}

/* Dialogs */
#dialogs, .Dialogs {
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 101;
  pointer-events: none;
  box-sizing: border-box;
  padding: var(--dialogs-padding, 24px);
}

/* Dialog */
#dialog, .dialog {
  width: var(--dialog-width, 80%);
  position: absolute;
  user-select: none;
  pointer-events: auto;
  background: var(--dialog-color-background, var(--background-color));
  color: var(--dialog-color-on-background, var(--on-background-color));
  box-sizing: border-box;
  padding: var(--dialog-padding, 8px 16px);
  border-radius: var(--dialog-border-radius, 12px);

  /* opacity: 0; */
  text-align: center;
  max-width: var(--dialog-max-width, 320px);
  
  --fade-in-animation-delay: var(--dialog-animation-delay, 200ms);
}

/* Dialog Title */
.dialog-title {
  margin: 16px 0;
  font-size: 24px;
  font-weight: bold;
  line-height: 30px;
  letter-spacing: 0.8px;
  word-spacing: normal;
}

/* Dialog Message */
.dialog-message, .dialog-msg {
  opacity: var(--opacity-text-inactive);
  font-size: 16px;
  line-height: 24px;
  letter-spacing: 0.20px;
  word-spacing: 1.5px;
}

/* Dialog Buttons */
.dialog-buttons {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/* Each Dialog Button */
a.dialog-button, a[role="button"].dialog-button {
  width: 100%;
  height: auto;
  border-radius: 8px;
  margin: 8px 0;
  background: var(--dialog-button-background-color, inherit);
  color: var(--dialog-button-text-color, inherit);
  font-size: 20px;
  line-height: 50px;
  letter-spacing: 1px;
  font-weight: bold;
  text-align: center;
  align-items: center;
}

/* Dialog Button with default attribute */
a.dialog-button[data-default], a[role="button"][data-default].dialog-button {
  color: var(--dialog-button-color-default, var(--primary-color));
}

/* Hover on Dialog Button */
a.dialog-button:hover, a[role="button"].dialog-button:hover {
  background: var(--dialog-button-color-hover, var(--surface-variant-color));
}

a.dialog-button:focus, a[role="button"].dialog-button:focus {
  outline: 3px solid;
  outline-color: var(--tertiary-color);
}

/* === End of Dialog Styles === */


/* === Menu Styles === */

/* Menus */
#menus, .Menus, 
#menus > ul, .Menus > ul {
  z-index: 102;
  pointer-events: none;
  justify-content: flex-end; /* b4: end */
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  align-items: center;
  overflow: hidden;
  padding: 24px;
  margin: 0;
}

#menus > ul, .Menus > ul {
  width: 100% !important;
  padding: 0 !important;
  height: auto !important;
}


/* Menu of Menus-Container */
#menus > menu, .Menus > menu,
#menus > ul > menu, .Menus > ul > menu {
  width: 100%;
  max-width: 500px;
  list-style: none;
  pointer-events: auto;
  box-sizing: border-box;
  padding: 24px 0;
  margin: var(--menu-margin, 16px);

  /* margin-bottom: calc(24px + var(--nav-bar-size, 54px)); */
  border-radius: 24px;
  background: var(--menu-background-color, var(--background-color));
  color: var(--menu-text-color, var(--on-background-color));
}


main .Menus > menu,
aside .Menus > ul > menu {
  margin-bottom: 32px !important;
}


/* Close-Menu Items */
menu > li[role="close-menu"] {
  margin-top: -12px;
  padding-left: 12px;
  display: flex;
  justify-content: flex-start; /* b4: start */
  margin-bottom: 12px;
}

/* Button of Close-Menu Items */
li[role="close-menu"] > button {
  --icon-button-size: 32px;
  --icon-button-opacity: 0.2;

  background: var(--on-background-color);
  color: var(--background-color);
  border-radius: 40px;
}

/* Icon in Button of Close-Menu Items */
li[role="close-menu"] > button span.icon {
  transform: scale(1.2) rotate(-90deg) translateX(5px);
}

/* Menu-Items */
menu > li.menu-item {
  background: inherit;
  color: var(--on-background-color);
  opacity: var(--opacity-text-inactive);
}

menu > li.menu-item:hover {
  background: rgb(0 0 0 / var(--opacity-menu-item));
  opacity: var(--opacity-text-active);
}

menu > li.menu-item:hover > a {
  text-decoration: none;
  cursor: pointer;
}

/* Button in Menu-Item */
.menu-item button, .menu-item a[role="button"] {
  --material-icon-size: 24px;

  display: flex;
  flex-direction: row;
  align-items: center;
  width: 100%;
  height: auto;
  border: 0;
  background: inherit;
  padding: 12px 24px;
  font-size: 18px;
  line-height: 30px;
  color: inherit;
  cursor: default;
  user-select: none;
  letter-spacing: 0.96px;
  margin: 0;
}

.menu-item button .icon, .menu-item a[role="button"] .icon {
  margin-right: 12px;
  max-width: 24px; /* <- HACK ;) */
}

.menu-item button :not(.icon), .menu-item a[role="button"] :not(.icon) {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}


/* Selected Menu Item */
.menu-item[aria-selected="true"],
.menu-item[data-selected="true"] {
  color: var(--menu-item-selected-color, var(--primary-color));
  opacity: 1;
}

/* === End of Menu Styles === */



/* FAB */
button.fab {
  --button-width: 60px;
  --button-height: 60px;
  --button-padding: 8px;
  --button-background-color: var(--primary-color);
  --material-icon-color: var(--on-primary-color);
  --material-icon-size: 32px;

  position: absolute;
  bottom: 0;
  right: 0;
  margin: 24px 16px;
  border-radius: 50%;
  margin-bottom: 80px;
  margin-right: 32px;
  z-index: 100;
}

/* Hovered FAB */
button.fab:hover {
  --button-background-color-hover: var(--primary-container-color);
  --material-icon-color: var(--on-primary-container-color);
}

/* Focused FAB */
button.fab:focus-visible {
  --material-icon-color: var(--on-tertiary-color);
}






/* Toast */
#toast {}

/* Default Links - A */
a {
  color: var(--link-color, var(--primary-color));
  text-decoration: none;
  cursor: pointer;
}

/* Hover over default links - A */
a:hover {
  text-decoration: underline;
}


/* Icon Wrapper  & Nav Links  */
a.icon-wrapper, a.nav-link {
  display: flex;
  position: relative;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: var(--app-bar-size, 54px);
  box-sizing: border-box;
}

/* Nav Links */
a.nav-link {
  width: var(--nav-link-width, 100%);
  height: var(--nav-link-height, 60px);
  margin: var(--nav-link-margin, 8px 0);
  opacity: var(--nav-link-opacity, var(--opacity-icon-inactive));
  user-select: none;
  color: var(--nav-icon-color, var(--on-background-color));
  fill: var(--nav-icon-color, var(--on-background-color));
}

a.nav-link.icon-wrapper {
  opacity: var(--side-bar-logo-opacity, 0.98);
}

/* App Logo in an Nav Link */
a.nav-link span.app-logo {
  --app-logo-size: var(--side-bar-logo-size, 48px);
  --app-logo-color: var(--side-bar-logo-color, var(--primary-color));
  --app-logo-opacity: inherit;
}


/* Initials in Nav Link */
a.nav-link span.initials, 
a.nav-link span[data-initials] {
  display: flex;
  width: 32px;
  height: 32px;
  text-transform: uppercase;

  /* border-style: dotted dashed; */
  flex-direction: column;
  font-weight: bold;
  justify-content: center;
  letter-spacing: 1px;
  align-items: center;
  border-radius: 100%;
  padding: 4px;
  box-sizing: border-box;
  opacity: 1;
  border: 0;
  font-size: 1rem;
  color: inherit;
}

/* Active Initials */
a.nav-link[data-active="true"] span.initials,
a.nav-link[data-active="true"] span[data-initials] {
  border: 0;
  border-style: solid;
  border-color: var(--primary-color);

  /* background: var(--initials-background-color, var(--surface-variant-color));
  color: var(--initials-text-color, var(--on-surface-variant-color)); */
}

/* Active Nav Links */
a.nav-link[data-active="true"] {
  opacity: 1;
  color: var(--nav-icon-color-active, var(--primary-color));

  /* pointer-events: none; */
}

/* App Logo in an active Nav Link */
a.nav-link[data-active="true"] span.app-logo {
  background-color: var(--app-logo-color-active, var(--primary-color));
  opacity: inherit;
}

/* Material Icons in Nav Link */
a.nav-link .material-icons,
a.nav-link .material-symbols-rounded {
  color: inherit !important;
  fill: inherit !important;
}

a.nav-link:hover, a.nav-link:focus {
 --app-logo-opacity: 1;

 opacity: var(--nav-icon-opacity, 1);
 text-decoration: none;
}

/* Nav Icons */
span.nav-icon {
 font-size: var(--nav-icon-size, 24px);
 color: inherit;
 fill: inherit;
}


/* Emphasis */
em {
  background: var(--em-background, var(--surface-variant-color));
  color: var(--on-background-color);
  padding: 2px 4px;
  border-radius: 6px;
  font-weight: bold;
}


/* +++++ Links & Link Item ++++++ */

/* Link Item */
.link-item > a,
.link-item > button {
  position: relative;
  width: 100%;
  text-align: left;
  color: var(--list-item-color, inherit);
  border-radius: 12px;
  overflow: hidden;
  padding: 1rem;
  margin: 16px auto;
  user-select: none;
  cursor: pointer;
  text-decoration: none;
}


.link-item {
  transition: all 0.2s ease-in-out;
}

.link-item > a::before,
.link-item > button::before {
  background: var(--list-item-background-color, var(--on-background-color));
  position: absolute;
  content: "";
  inset: 0;
  opacity: var(--opacity-list-item);
  pointer-events: none;
  transition: background 0.2s ease-in-out, opacity 0.2s ease-in-out;
}

.link-item:hover > a::before,
.link-item:hover > button::before {
  opacity: var(--opacity-list-item-hover);
}

.link-item[data-active="true"] > a,
.link-item[data-active="true"] > button {
  --list-item-background-color: var(--inverse-surface-color);
  --list-item-color: var(--inverse-on-surface-color);
  --link-item-icon-color: var(--primary-inverse-color);

  /* --list-item-background-color: var(--primary-container-color); */

  /* --list-item-color: var(--on-primary-container-color); */

  pointer-events: none;
}

.link-item[data-active="true"] > a::before,
.link-item[data-active="true"] > button::before {
  opacity: var(--opacity-list-item-active) !important;
}



/* Text Wrapper of Link Item */
 .link-item .text-wrapper {
  flex: 1;
  z-index: 1;
}

/* H3 in Link Item */
.link-item h3 {
  margin: 0;
  font-weight: bold;
  font-size: 1rem;
}

.link-items .divider-wrapper, 
.list-items .divider-wrapper,
.link-item .divider-wrapper {
  display: block;
  position: relative;
  width: 90%;
  margin: 0 auto;
  height: 1px;
  overflow: hidden;
}

/* H4 in Link Item */
.link-item h4 {
  font-size: 0.8rem;
  letter-spacing: 0.05rem;
  font-weight: bold;
  line-height: 1.25rem;
  color: inherit;
  margin: 0;
  margin-top: -5px;
  opacity: var(--opacity-text-disabled);
}

.link-item .arrow.icon {
  --material-icon-color: var(--link-item-icon-color, var(--primary-color));

  z-index: 1;
}

.link-item h4 {
  text-transform: capitalize;
}

/* +++++ End of Links & Link Item  +++++ */


/* === Select-List - UL === */


ul.select-list {
  list-style: none;
  margin: 1rem 1.5rem;
  padding: 0;
  font-size: 1.25rem;
  line-height: 2.5rem;
  text-transform: capitalize;
}


ul.select-list > *:nth-child(1) > .label {
  --settings-animation-delay: 0.2s;
}

ul.select-list > *:nth-child(2) > .label {
  --settings-animation-delay: 0.3s;
}

ul.select-list > *:nth-child(3) > .label {
  --settings-animation-delay: 0.4s;
}

ul.select-list > *:nth-child(4) > .label {
  --settings-animation-delay: 0.5s;
}

ul.select-list > *:nth-child(5) > .label {
  --settings-animation-delay: 0.6s;
}


ul.select-list li {
  display: flex;
  flex-direction: row;
  align-items: center;
  cursor: pointer;
  user-select: none;
  opacity: var(--opacity-text-inactive);
  
}

ul.select-list li .label {
  flex: 1;
  opacity: 0;
  animation: fadeIn ease 0.5s var(--settings-animation-delay, 0.2s) forwards;
}


ul.select-list li .label:focus-visible {
  outline: none;
  color: var(--tertiary-color);
  opacity: var(--opacity-text-active);
}

ul.select-list li .icon {
  visibility: hidden;
}

ul.select-list li[data-selected="true"] {
  color: var(--primary-color);
}

ul.select-list li[data-selected="true"] > .icon {
  visibility: visible;
  opacity: 0;
  color: inherit;
  animation: fadeIn ease 0.5s 0.5s forwards;
}

ul.select-list li:hover,
ul.select-list li[data-selected="true"] {
  font-weight: bold;
  opacity: var(--opacity-text-active);
}






/* === End of Select-List - UL === */








/* Filter Items */
.filter-item {
  --list-item-background-color: transparent;
  
  position: relative;
  max-height: var(--filter-item-height, auto);
  overflow: hidden;
  margin: var(--filter-item-margin, 1.5rem 0);
  border-radius: var(--filter-item-border-radius, 12px);
  transition: all 0.2s ease-in-out;
}

.filter-item > button > .icon {
  transition: transform 0.2s ease-in-out;
}

.filter-item:not([data-collapsed]) > button > .icon {
  transform: rotate(180deg);
}

.filter-item::before {
  background: var(--filter-item-background-color, var(--on-background-color));
  position: absolute;
  content: "";
  inset: 0;
  opacity: var(--opacity-filter-item);
  pointer-events: none;
  transition: background 0.2s ease-in-out, opacity 0.2s ease-in-out;
}

.filter-item:hover::before {
  opacity: var(--opacity-filter-item-hover);
}


.filter-item > button {
  margin: 0;
}

.filter-item > button > * {
  pointer-events: none;
}

.filter-item .content {
  position: relative;
  width: var(--filter-item-content-width, 100%);
  height: var(--filter-item-content-height, 200px);
  padding: 0.5rem 1rem;
  box-sizing: border-box;
  overflow: auto;
}

.filter-item[data-collapsed] {
  max-height: var(--filter-item-collapsed-height, 73px);
}

.filter-item[data-collapsed] > button {
  height: var(--filter-item-collapsed-height, 73px);
} 

.filter-item:not([data-collapsed]) > button h3 {
  font-size: 1.25rem;
} 


.filter-item > button h3 {
  transition: all 0.2s ease-in-out;
}

.filter-item > button h4 {
  opacity: 0;
  margin-bottom: -20px;
  transition: opacity 0.2s ease-in-out, margin 0.2s ease-in-out;
}


.filter-item[data-collapsed] > button h4 {
  opacity: var(--opacity-text-disabled);
  margin-bottom: 0;
} 

#prices, #colors {
  --dialog-list-margin: 0;

  margin-bottom: 1rem;
}

.filter-list-item {
  --dialog-list-item-padding: 0.5rem 0.75rem;
  --dialog-list-item-checkbox-size: 0.5rem;

  font-size: 1rem;

}



.filter-list-item > * {
  pointer-events: none;
  user-select: none;
}


.color-filter .color {
  width: var(--color-filter-size, 0.5rem);
  height: var(--color-filter-size, 0.5rem);
  border-radius: 50%;
}

/* === End of Filter Items === */









/* Slide Animation Delays */

.slide-anim-delay-200ms {
  --slide-animation-delay: 200ms;
}

.slide-anim-delay-300ms {
  --slide-animation-delay: 300ms;
}

.slide-anim-delay-500ms {
  --slide-animation-delay: 500ms;
}

.slide-anim-delay-1s {
  --slide-animation-delay: 1s;
}

.slide-anim-delay-2s {
  --slide-animation-delay: 2s;
}


/* Fade Animation Delays */

.fade-anim-delay-200ms {
  --fade-animation-delay: 200ms;
}

.fade-anim-delay-300ms {
  --fade-animation-delay: 300ms;
}

.fade-anim-delay-500ms {
  --fade-animation-delay: 500ms;
}

.fade-anim-delay-1s {
  --fade-animation-delay: 1s;
}

.fade-anim-delay-2s {
  --fade-animation-delay: 2s;
}



/* ==== Chips (Container + Icon Buttons + Chip) ==== */

.chips-container {
  width: var(--chips-container-width, auto);
  height: var(--chips-container-height, 48px);
  position: relative;
}

.chips-container > * {}


.chips-container > button.icon-button {
  display: none;
}



.chips-container:not([data-scrollpos="start"]) > ul.chips::before {
  position: sticky;
  content: "";
  width: calc(var(--chips-size, 32px) * 2);
  min-width: calc(var(--chips-size, 32px) * 2);
  height: var(--chips-size, 32px);
  pointer-events: none;
  top: 0;
  left: -3px;
  z-index: 1;
  background: linear-gradient(to right, var(--background-color), transparent);
}

.chips-container:not([data-scrollpos="start"]) > ul.chips > li.chip:first-child {
  margin-left: calc(-2 * var(--chips-size, 32px));
}

.chips-container:not([data-scrollpos="end"]) > ul.chips > li.chip:last-child {
  margin-right: calc(-2 * var(--chips-size, 32px));
}



.chips-container:not([data-scrollpos="end"]) > ul.chips::after {
  position: sticky;
  content: "";
  width: calc(var(--chips-size, 32px) * 2);
  min-width: calc(var(--chips-size, 32px) * 2);
  height: var(--chips-size, 32px);
  pointer-events: none;
  top: 0;
  right: -3px;
  z-index: 1;
  background: linear-gradient(to right, transparent, var(--background-color));
}


.chips-container > ul.chips {
  position: absolute;
  inset: 0;
  top: 0;
  left: 0;
  list-style: none;
  padding: 0;
  width: 100%;
  height: var(--chips-size, 32px);
  overflow: auto hidden;
  margin: 0.5rem;
  background: var(--chips-background-color, var(--background-color));
  scroll-behavior: smooth;
}

ul.chips > li.chip::before {
  position: absolute;
  content: '';
  background: var(--chip-background-color, var(--surface-variant-color));
  width: 100%;
  height: 100%;
  inset: 0;
  border-radius: var(--chip-radius, 6px);
  opacity: var(--chip-background-opacity, 0.2);
  transition: all 0.2s ease-in-out;
}

ul.chips > li.chip {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  position: relative;
  width: auto;
  height: 100%;
  box-sizing: border-box;
  padding: 0 0.75rem;
  margin: 0 0.5rem;
  border-radius: var(--chip-radius, 6px);
  font-size: 0.95rem;
  user-select: none;
  pointer-events: auto;
  white-space: nowrap;
  transition: background-color 0.2s ease-in-out;
}

ul.chips > li.chip:hover::before {
  opacity: var(--chip-background-opacity-hover, 0.6);
}


ul.chips > li.chip[data-selected="true"] {
  background: var(--inverse-surface-color);
  color: var(--inverse-on-surface-color);
  font-weight: bold;
}

ul.chips > li.chip[data-selected="true"]::before {
  opacity: var(--chip-background-opacity-selected, var(--opacity-md-icon-active, 0.8));
  z-index: -1;
}


li.chip span {
  position: relative;

  /* opacity: var(--opacity-text-inactive, 0.68); */
  opacity: var(--opacity-text-active);
}

ul.chips > li.chip:hover span,
ul.chips > li.chip[data-selected="true"]:hover span {
  opacity: 1;
}


/* ==== End of Chips ==== */



/* Aside Wrapper */
.AsideWrapper {
  margin: var(--aside-wrapper-margin-top, 0) var(--aside-wrapper-margin-right, 0) var(--aside-wrapper-margin-bottom, 0) var(--aside-wrapper-margin-left, 0);
  
  /* opacity: 0; */
  transition: opacity var(--aside-duration, 0.3s) cubic-bezier(0.16, 1, 0.3, 1), margin var(--aside-duration, 0.3s) cubic-bezier(0.16, 1, 0.3, 1);
}

.AsideWrapper {
  --aside-wrapper-margin-left: var(--current-aside-width);
}


.AsideWrapper.is-aside-open-on-mobile.is-aside-open {
  --aside-wrapper-margin-left: 0 !important;
}

/*
.AsideWrapper.is-aside-open,
.AsideWrapper.is-aside-opening
.AsideWrapper.is-aside-closing {
  opacity: 1;
}
*/






/* 
 * --> Wide - Layout <--
 * Phone: ? (Responsive)
 * Dimension: 460px+ (width)
 *
 * ***************************************
 * when the viewport is bigger than 460px,
 * layout changes to wide-layout.
 * ***************************************
 */
@media (width >= 460px) {
  .app-bar a.title-wrapper, 
  .app-bar a.title-wrapper, 
  .app-bar a.title-wrapper[data-active="true"],
  .app-bar a.title-wrapper[data-active="true"],

  .AppBar a.TitleWrapper,
  .AppBar a.TitleWrapper,
  .AppBar a.TitleWrapper[data-active="true"],
  .AppBar a.TitleWrapper[data-active="true"] {
    text-underline-offset: 22px;
    text-decoration-thickness: var(--app-bar-underline-thickness, 2px);
  }

  .chips-container > button.icon-button {
    display: block;
  }

  .chips-container[data-scrollpos="start"] > button.icon-button.left {
    display: none;
  }
  
  .chips-container[data-scrollpos="end"] > button.icon-button.right {
    display: none;
  }

  /* === SPECIFIC VIEWPORTS ONLY === */

  [narrow-only] {
    display: none !important;
  }

[tablet-only], [narrow-and-tablet-only] {
    display: initial !important;
  }

  /* Vertical Nav Bar */
  .nav-bar.vertical, #sideBar {
    width: var(--side-bar-size, 78px); /* b4: 78px */
    min-width: var(--side-bar-size, 78px); /* b4: 78px */
  } 


  /* Responsive Vertical Nav Bar */
  .nav-bar.vertical[data-responsive] {
    display: flex;
  }
  
  /* Horizontal Nav Bar & Footer of Main */
  .nav-bar.horizontal, main > footer {
    height: var(--nav-bar-size, 68px);
  } 

  /* Responsive Horizontal Nav Bar */

  /* HACK: allows me to display the nav bar in it's [demo page](component/demo/nav-bar.php) */
  .nav-bar.horizontal[data-responsive] {
    display: none !important;
  }

  /* Nav Links in a Horizontal Nav Bar */
  .nav-bar.horizontal .nav-link {
    /* width: var(--nav-bar-size, 68px); */
  }

  /* all App Bars in App Header */
  #appHeader > .app-bar, header > .app-bar {
    height: var(--app-bar-size, 64px);
  }

  /* ASIDE part of App Layout */
  #appLayout > aside, aside {
    display: flex;
  }

  /* Icon-Button */
  button.icon-button, a[role="icon-button"], a[role="like-button"] {
    width: var(--icon-button-size, 48px);
    height: var(--icon-button-size, 48px); 
  }

 

  /* Icon in Icon-Button */
  button.icon-button .icon, a[role="icon-button"] .icon, a[role="like-button"] .icon {
    font-size: calc(var(--icon-button-size, 48px) - (var(--icon-button-padding, 8px) * 2)); 
  }

  /* Icon Wrapper Links */
  a.icon-wrapper {
    height: var(--app-bar-size, 60px);
  }

  input[data-type="submit"], button[data-type="outlined"], a[role="button"][data-type="outlined"], button[data-type="text"] {
    margin-top: 32px;
    margin-bottom: 24px;
  }

  /* Container of Content */
  #content > .container {
    padding: 24px;
  }

  /* Contained Button */
  button[data-type="contained"], button[data-type="outlined"], button[data-type="text"] {
    font-size: 20px;
    padding: 8px 16px; /* b4: 12px 16px */
  }

  /* Menu of Menus-Container */
  #menusContainer > menu, .menus-container > menu {
    margin: 24px;
  }
  

  /*** Doodle of Empty Container ***/
  [data-content] > .container[data-empty="true"] .doodle {
    width: var(--empty-doodle-size-bigger, 256px);
    height: var(--empty-doodle-size-bigger, 256px);
  }



  /* Toasts */
  #toasts {
    padding: 3rem;
  }


  /* Toast Emojis */
  .toast-emoji {
    width: var(--toast-emoji-size, 32px);
    height: var(--toast-emoji-size, 32px);
  }

  .toast-emoji:not([data-emoji-hidden], .success) {
    transform: scale(1.2);
  }

  button.fab {
    margin: 32px;
  }
}

/**
 * --> Narrow - Horizontal Layout <--
 * Phone: ? (Responsive)
 * Height: 0px <-to-> 460px
 */
@media (height <= 460px) {
  /* Content of Vertical Nav Bar / Side Bar */
  .nav-bar.vertical > [data-content],
  #sideBar > [data-content] {
    justify-content: start;
  }

}


@media (width >= 768px) {
  /* Aside Wrapper */
  .AsideWrapper {
    --aside-wrapper-margin-left: calc(-1 * var(--current-aside-width));

    opacity: 0;
  }


  /* Aside Wrapper */
  .AsideWrapper.is-aside-open, 
  .AsideWrapper:has(aside.is-open) /* <- HACK: to force the display bug issue when returning to the product page */ { 
    --aside-wrapper-margin-left: 0 !important;

    opacity: 1;
  }


  .AsideWrapper.is-aside-opening, .AsideWrapper.is-aside-closing {
    z-index: 10;
  }


  /* Toast */
  #toasts .toast {
    padding: 1rem 1.5rem;
    border-radius: 48px;
    font-size: 1.25rem;
  }

  #toasts .toast-emoji:not([data-emoji-hidden], .success) {
    transform: scale(1.5);
  }

  .app-layout[data-navbar-enabled="true"] {
    max-height: initial;
  }

  #dialog, .dialog {
    max-width: var(--dialog-max-width, 480px);
  }

  /* === SPECIFIC VIEWPORTS ONLY === */
  [narrow-only] {
    display: none !important;
  }

  [tablet-only], [narrow-and-tablet-only] {
    display: none !important;
  }

  [wide-only], [desktop-only] {
    display: flex !important;
  }

  /* Vertical Nav Bar */
  .nav-bar.vertical, #sideBar {
    width: var(--side-bar-size, 90px); /* b4: 78px */
    min-width: var(--side-bar-size, 90px); /* b4: 78px */
  }


  ul.select-list {
    font-size: 2rem;
    line-height: 4rem;
  }

  ul.select-list .icon {
    font-size: 2rem;
  }

  .link-item[data-expands="true"]:not([data-active="true"]):hover {
    transform: scale(1.05) translateY(5px);
  }


  .color-filter .color {
    width: var(--color-filter-size, 0.75rem);
    height: var(--color-filter-size, 0.75rem);
  }

  /* Button in Menu-Item */
  *:not(main, aside) .menu-item button, 
  *:not(main, aside) .menu-item a[role="button"] {
    font-size: 20px;
  }
   
  *:not(main, aside) .menu-item button .icon, 
  *:not(main, aside) .menu-item a[role="button"] .icon {
    margin-right: 16px;
  }

  *:not(main, aside) .menu-item button, 
  *:not(main, aside) .menu-item a[role="button"] {
    padding-top: 16px;
    padding-bottom: 16px;
  }

}



@media (width <= 768px) {
  .AsideWrapper.is-aside-open-on-mobile {
    position: fixed;
    width: 100%;
    height: 100%;
    inset: 0;
    z-index: 500;
  }

  .AsideWrapper.is-aside-open-on-mobile.is-aside-opening, 
  .AsideWrapper.is-aside-open-on-mobile.is-aside-closing {
    z-index: 500;
  }

  /* ASIDE */
  aside {
    display: flex;
    position: absolute;
    inset: 0;
    background: var(--aside-background-color, inherit);
    color: var(--aside-text-color, inherit);
    width: 100%;
    height: 100%;

    /*
    -webkit-animation: slideRight 0.3s ease-in-out forwards;
    -moz-animation: slideRight 0.3s ease-in-out forwards;
    animation: slideRight 0.3s ease-in-out forwards;
    */
  }

  /* Not [data-opened="true"] ASIDE */
  aside:not([data-opened="true"]) {
    /* display: none; */
  }

  /* [data-opened="true"] ASIDE */
  aside[data-opened="true"] {
    /* -webkit-animation: slideFromRight 0.3s ease-in-out forwards;
    -moz-animation: slideFromRight 0.3s ease-in-out forwards;
    animation: slideFromRight 0.3s ease-in-out forwards; */
  }

  /* [data-closing] ASIDE */
  aside[data-closing] {
    /* -webkit-animation: slideRight 0.3s ease-in-out forwards !important;
    -moz-animation: slideRight 0.3s ease-in-out forwards !important;
    animation: slideRight 0.3s ease-in-out forwards !important; */
  }

}


/* 
 * --> Tablet - Device <--
 * Phone: ? (Responsive)
 * Width: 768px <-to-> 1024px
 */
@media (width >= 768px) and (width <= 1024px) {
  /* Dialog */
  .dialog {
    text-align: left;
  }

  /* Divider of Dialog */
  .dialog span.divider {
    display: none;
  }

  /* Dialog Title */
  .dialog-title {
    font-size: 26px;
    line-height: 32px;
  }

  /* Dialog Message */
  .dialog-message, .dialog-msg {
    font-size: 20px;
    line-height: 32px;
    margin: 12px 0;
  }

  /* Dialog Buttons */
  .dialog-buttons {
    flex-direction: row;
  }

}


/* 
 * --> Laptop - Device <--
 * Phone: ? (Responsive)
 * Width: 1024px <-to-> 2560px
 */
@media (width >= 1024px) and (width <= 2560px) {
  /* ASIDE part of App Layout */
  #appLayout > aside, aside {
    width: 60%;
  }

  /* Dialogs */
  #dialogs, .Dialogs {
    padding: var(--dialogs-container-padding, 24px 48px);
  }

  /* Dialog */
  .dialog {
    padding: 12px 24px;
    text-align: left;
  }

  /* Divider of Dialog */
  .dialog span.divider {
    display: none;
  }

  /* Dialog Title */
  .dialog-title {
    font-size: 26px;
    line-height: 32px;
  }

  /* Dialog Message */
  .dialog-message, .dialog-msg {
    font-size: 20px;
    line-height: 26px;
    margin: 12px 0;
  }

  /* Dialog Buttons */
  .dialog-buttons {
    flex-direction: row;
  }


  /* Toasts */
  #toasts {
    padding: 5rem;
  }

  /* Toast Emojis */
  .toast-emoji {
    width: var(--toast-emoji-size, 42px);
    height: var(--toast-emoji-size, 42px);
  }

}


/* ==== END of THEME STYLES ==== */
